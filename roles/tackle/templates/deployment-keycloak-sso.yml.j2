---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ keycloak_sso_deployment_name }}
  namespace: {{ app_namespace }}
  labels:
    app.kubernetes.io/name: {{ keycloak_sso_service_name }}
    app.kubernetes.io/component: {{ keycloak_sso_component_name }}
    app.kubernetes.io/part-of: {{ app_name }}
  annotations:
    app.openshift.io/connects-to: >-
      [
        { "apiVersion": "apps/v1", "kind": "Deployment", "name": "{{ keycloak_database_deployment_name }}" }
      ]
spec:
  replicas: {{ keycloak_sso_deployment_replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ keycloak_sso_service_name }}
      app.kubernetes.io/component: {{ keycloak_sso_component_name }}
      app.kubernetes.io/part-of: {{ app_name }}
{% if keycloak_sso_deployment_strategy == 'Recreate' %}
  strategy:
    type: {{ keycloak_sso_deployment_strategy }}
{% endif %}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ keycloak_sso_service_name }}
        app.kubernetes.io/component: {{ keycloak_sso_component_name }}
        app.kubernetes.io/part-of: {{ app_name }}
        app: {{ app_name }}
        role: {{ keycloak_sso_service_name }}
    spec:
      initContainers:
        - name: keycloak-theme
          image: "{{ keycloak_init_image_fqin }}"
          volumeMounts:
            - name: {{ keycloak_sso_service_name }}-theme
              mountPath: /deployments
      containers:
        - name: {{ keycloak_sso_container_name }}
          image: "{{ keycloak_sso_image_fqin }}"
          args:
          - -Djgroups.dns.query=mta-kc-discovery.openshift-mta
          - --verbose
          - start
          imagePullPolicy: "{{ image_pull_policy }}"
          env:
            - name: KC_BOOTSTRAP_ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ keycloak_sso_secret_name }}
                  key: username
            - name: KC_BOOTSTRAP_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ keycloak_sso_secret_name }}
                  key: password
            - name: JAVA_OPTS
              value: {{ keycloak_sso_java_opts }}
            - name: PROXY_ADDRESS_FORWARDING
              value: 'true'
            - name: KC_DB
              value: postgres
            - name: KC_DB_URL
              value: jdbc:postgresql://{{ keycloak_database_service_k8s_resource_name }}:5432/{{ keycloak_database_db_name }}
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ keycloak_database_secret_name }}
                  key: database-user
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ keycloak_database_secret_name }}
                  key: database-password
            - name: KC_HTTP_RELATIVE_PATH
              value: /auth
            - name: KC_PROXY_HEADERS
              value: xforwarded
            - name: KC_HTTPS_CERTIFICATE_FILE
              value: /service-crt/tls.crt
            - name: KC_HTTPS_CERTIFICATE_KEY_FILE
              value: /service-crt/tls.key
            - name: KC_HOSTNAME_STRICT
              value: "false"
            - name: KC_HTTP_ENABLED
              value: "true"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
          resources:
            limits:
              cpu: {{ keycloak_sso_container_limits_cpu }}
              memory: {{ keycloak_sso_container_limits_memory }}
            requests:
              cpu: {{ keycloak_sso_container_requests_cpu }}
              memory: {{ keycloak_sso_container_requests_memory }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ keycloak_sso_port }}
              scheme: {{ keycloak_sso_proto|upper }}
            initialDelaySeconds: {{ keycloak_sso_liveness_init_delay }}
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 20
          readinessProbe:
            httpGet:
              path: /
              port: {{ keycloak_sso_port }}
              scheme: {{ keycloak_sso_proto|upper }}
            initialDelaySeconds: {{ keycloak_sso_readiness_init_delay }}
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 20
          volumeMounts:
            - name: {{ keycloak_sso_service_name }}-theme
              mountPath: /opt/jboss/keycloak/standalone/deployments
            - mountPath: "/service-crt"
              name: service-crt
              readOnly: true
      volumes:
        - name: {{ keycloak_sso_service_name }}-theme
          emptyDir: {}
        - name: service-crt
          secret:
            secretName: {{ keycloak_sso_tls_secret_name }}
