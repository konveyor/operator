---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ ui_deployment_name }}
  namespace: {{ app_namespace }}
  labels:
    app.kubernetes.io/name: {{ ui_service_name }}
    app.kubernetes.io/component: {{ ui_component_name }}
    app.kubernetes.io/part-of: {{ app_name }}
  annotations:
    app.openshift.io/connects-to: >-
      [
{% if feature_auth_required|bool and feature_auth_type == "keycloak" and app_profile == 'konveyor' %}
        { "apiVersion": "apps/v1", "kind": "Deployment", "name": "{{ keycloak_sso_deployment_name }}" },
{% elif feature_auth_required|bool and feature_auth_type == "keycloak" and app_profile == 'mta' %}
        { "apiVersion": "apps/v1", "kind": "StatefulSet", "name": "keycloak" },
{% endif %}
        { "apiVersion": "apps/v1", "kind": "Deployment", "name": "{{ hub_deployment_name }}" }
      ]
spec:
  replicas: {{ ui_deployment_replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ ui_service_name }}
      app.kubernetes.io/component: {{ ui_component_name }}
      app.kubernetes.io/part-of: {{ app_name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ ui_service_name }}
        app.kubernetes.io/component: {{ ui_component_name }}
        app.kubernetes.io/part-of: {{ app_name }}
        app: {{ app_name }}
        role: {{ ui_service_name }}
    spec:
      containers:
{% if feature_auth_required|bool and feature_auth_type == "oauth" %}
        - args:
          - --https-address=:{{ oauth_ssl_port }}
          - --provider={{ oauth_provider }}
          - --upstream=http://localhost:{{ ui_port }}
          - --cookie-secret={{ cookie_secret_data }}
{% if oauth_provider == "openshift" %}
          - --openshift-service-account={{ ui_serviceaccount_name }}
          - --tls-cert=/etc/tls/private/tls.crt
          - --tls-key=/etc/tls/private/tls.key
{% else %}
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-key-file=/etc/tls/private/tls.key
{% if oauth_email_domain is defined %}
          - --email-domain={{ oauth_email_domain }}
{% endif %}
{% if oauth_client_id is defined %}
          - --client-id={{ oauth_client_id }}
{% endif %}
{% if oauth_client_secret is defined %}
          - --client-secret={{ oauth_client_secret }}
{% endif %}
{% endif %}
{% if oauth_access_rule != "" %}
          - {{ oauth_access_rule }}
{% endif %}
{% if oauth_extra_opts is defined %}
{% for item in oauth_extra_opts  %}
          - {{ item }}
{% endfor %}
{% endif %}
          image: "{{ oauth_image_fqin }}"
          imagePullPolicy: "{{ image_pull_policy }}"
          name: oauth-proxy
          ports:
          - containerPort: 8081
            name: public
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: {{ ui_tls_secret_name }}
{% endif %}
        - name: {{ ui_container_name }}
          image: "{{ ui_image_fqin }}"
          imagePullPolicy: "{{ image_pull_policy }}"
          env:
            - name: APP_NAME
              value: "{{ app_name }}"
            - name: PROFILE
              value: "{{ app_profile }}"
            - name: VERSION
              value: "{{ app_version }}"
            - name: UI_INGRESS_PROXY_BODY_SIZE
              value: '{{ui_ingress_proxy_body_size}}'
            - name: TACKLE_HUB_URL
              value: "{{ hub_url }}"
{% if feature_auth_required|bool and feature_auth_type == "keycloak" %}
            - name: AUTH_REQUIRED
              value: "true"
            - name: KEYCLOAK_REALM
              value: {{ keycloak_sso_realm }}
            - name: KEYCLOAK_CLIENT_ID
              value: {{ keycloak_sso_client_id }}
{% if app_profile == 'mta' %}
            - name: KEYCLOAK_SERVER_URL
              value: {{ rhbk_url }}
{% else %}
            - name: KEYCLOAK_SERVER_URL
              value: {{ keycloak_sso_url }}
{% endif %}
{% else %}
            - name: AUTH_REQUIRED
              value: "false"
{% endif %}
            - name: NODE_EXTRA_CA_CERTS
              value: {{ ui_node_extra_ca_certs }}
{% if ui_tls_enabled|bool %}
            - name: UI_TLS_ENABLED
              value: 'true'
            - name: UI_TLS_CERTIFICATE
              value: "/var/run/secrets/{{ ui_tls_secret_name }}/tls.crt"
            - name: UI_TLS_KEY
              value: "/var/run/secrets/{{ ui_tls_secret_name }}/tls.key"
{% else %}
            - name: UI_TLS_ENABLED
              value: 'false'
{% endif %}
            - name: RWX_SUPPORTED
              value: "{{ rwx_supported | string | lower }}"
          ports:
            - containerPort: {{ ui_port }}
              protocol: TCP
          resources:
            limits:
              cpu: {{ ui_container_limits_cpu }}
              memory: {{ ui_container_limits_memory }}
            requests:
              cpu: {{ ui_container_requests_cpu }}
              memory: {{ ui_container_requests_memory }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - '-c'
                - 'ps -A | grep node'
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: {{ ui_port }}
              scheme: {{ ui_proto|upper }}
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
{% if ui_tls_enabled|bool %}
            - name: {{ ui_tls_secret_name }}
              mountPath: /var/run/secrets/{{ ui_tls_secret_name }}/tls.crt
{% endif %}
{% if trusted_ca_enabled is defined and trusted_ca_enabled|bool %}
            - name: trusted-ca
              mountPath: /etc/pki/ca-trust/extracted/pem
              readOnly: true
{% endif %}
      serviceAccount: {{ ui_serviceaccount_name }}
      volumes:
{% if ui_tls_enabled|bool or (feature_auth_required|bool and feature_auth_type == "oauth") %}
        - name: {{ ui_tls_secret_name }}
          secret:
            secretName: {{ ui_tls_secret_name }}
            defaultMode: 420
{% endif %}
{% if trusted_ca_enabled is defined and trusted_ca_enabled|bool %}
        - name: trusted-ca
          configMap:
            name: trusted-ca
            items:
              - key: ca-bundle.crt
                path: tls-ca-bundle.pem
{% endif %}
